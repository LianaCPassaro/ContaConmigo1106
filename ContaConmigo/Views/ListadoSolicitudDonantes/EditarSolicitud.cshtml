@model ContaConmigo.Models.RequestDonor

@{
                /**/

                ViewBag.Title = "EditarSolicitud";
                Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Solicitud</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Modifique los valores ingresados y luego presione el botón Guardar</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RequestDonorId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name_Request_Don, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name_Request_Don, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name_Request_Don, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Last_Name_Request_Don, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Last_Name_Request_Don, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Last_Name_Request_Don, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Last_Date_Replacement, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Last_Date_Replacement, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Last_Date_Replacement, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AmountDonor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AmountDonor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AmountDonor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InstitutionId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.InstitutionId, ViewBag.InstitutionList as SelectList, "--Institución--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.InstitutionId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GroupId, ViewBag.BloodGroupList as SelectList, "--Grupo--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FactorId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FactorId, ViewBag.BloodFactorList as SelectList, "--Factor--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FactorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone_Number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone_Number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone_Number, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="FileUpload1" />
            <input type="button" id="btnUpload" value="Upload Files" />
        </div>
    </div>

    <div class="container">
        <div class="form-group">

                @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.ProvinceId, ViewBag.ProvinceList as SelectList, new { @class = "form-control" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.CityId, ViewBag.CityList as SelectList, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
           @* @Html.CheckBox(model => model.Completed, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver", "ListadoSolicitudDonante")
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#ProvinceId").change(function () {
                $.get("/ListadoSolicitudDonantes/GetCityList", { ProvinceId: $("#ProvinceId").val() }, function (data) {
                    //$("#CityId").empty();
                    $.each(data, function (index, row) {
                        $("#CityId").append("<option value='" + row.CityId + "'>" + row.CityName + "</option>")
                    });
                });
            })
        });
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#btnUpload').click(function () {

                // Checking whether FormData is available in browser
                if (window.FormData !== undefined) {

                    var fileUpload = $("#FileUpload1").get(0);
                    var files = fileUpload.files;

                    // Create FormData object
                    var fileData = new FormData();

                    // Looping over all files and add it to FormData object
                    for (var i = 0; i < files.length; i++) {
                        fileData.append(files[i].name, files[i]);
                    }

                    // Adding one more key to FormData object
                    fileData.append('username', ‘Manas’);

                    $.ajax({
                        url: '/ListadoSolicitudDonantes/Temp',
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: fileData,
                        success: function (result) {
                            alert(result);
                        },
                        error: function (err) {
                            alert(err.statusText);
                        }
                    });
                } else {
                    alert("FormData is not supported.");
                }
            });
        });
    </script>
}
